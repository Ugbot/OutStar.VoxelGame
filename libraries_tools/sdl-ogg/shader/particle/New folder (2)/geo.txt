#version 330 core

layout(points, invocations = 1) in;
layout(triangle_strip, max_vertices = 16) out;

in  vec4 vs_out[];
out float geo_out;
uniform mat4 projectionMatrix;
uniform vec4 block_pos;

void main(void)
{
	for ( int i=0 ; i<4;i++)
	{
		float xyzc;
		if(i==0){xyzc=abs(gl_in[0].gl_Position.x);geo_out=vs_out[0].x;}
		if(i==1){xyzc=abs(gl_in[0].gl_Position.y);geo_out=vs_out[0].y;}
		if(i==2){xyzc=abs(gl_in[0].gl_Position.z);geo_out=vs_out[0].z;}
		if(i==3){xyzc=abs(gl_in[0].gl_Position.w);geo_out=vs_out[0].w;}

		vec4 plus=fract(vec4( 1.0,256.0,65536.0,0.0) * xyzc)*4.0+block_pos;
		//plus.w=1.0;

		

		plus=projectionMatrix*plus;

		if (plus.z>0)
		if (plus.x/plus.w<1)
		if (plus.x/plus.w>-1)
		if (plus.y/plus.w<1)
		if (plus.y/plus.w>-1)
		{
			gl_Position = vec4(-0.1,-0.1, 0.0 , 0.0 )+plus;
			EmitVertex();
			gl_Position = vec4( 0.1,-0.1, 0.0 , 0.0 )+plus;
			EmitVertex();
			gl_Position = vec4(-0.1, 0.1, 0.0 , 0.0 )+plus;
			EmitVertex();
			gl_Position = vec4( 0.1, 0.1, 0.0 , 0.0 )+plus;
			EmitVertex();	
			EndPrimitive();
		}
	}
}
